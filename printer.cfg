# This file contains common pin mappings for the BIGTREETECH SKR V1.4
# board. To use this config, the firmware should be compiled for the
# LPC1768 or LPC1769(Turbo).

# See docs/Config_Reference.md for a description of parameters.

###############################################################################################################################################################################################
#                                                                                      Printer Config                                                                                         #
###############################################################################################################################################################################################
[mcu]
serial: /dev/serial/by-id/usb-Klipper_lpc1769_13500104A49869AFB7D83E5EC62000F5-if00

[mcu host]
serial: /tmp/klipper_host_mcu

[adxl345]
cs_pin: host:None

[resonance_tester]
accel_chip: adxl345
probe_points:
    100, 100, 20  # an example
    
[printer]
kinematics: cartesian
max_velocity: 250
max_accel: 3600
max_accel_to_decel: 2000
square_corner_velocity: 5.0

[tmc2209 stepper_x]
uart_pin:P1.10
run_current:.8
driver_SGTHRS: 30
diag_pin: P1.29
stealthchop_threshold: 999999

[stepper_x]
step_pin: P2.2
dir_pin: !P2.6
enable_pin: !P2.1
microsteps: 16
rotation_distance: 40
endstop_pin: tmc2209_stepper_x:virtual_endstop
position_endstop: 0
position_max: 200
homing_speed: 30

[tmc2209 stepper_y]
uart_pin:P1.9
run_current:.8
# driver_SGTHRS: 10
# diag_pin: P1.26
stealthchop_threshold: 999999

[stepper_y]
step_pin: P0.19
dir_pin: !P0.20
enable_pin: P2.8
microsteps: 16
rotation_distance: 40
endstop_pin: !P1.28
position_endstop: 0
position_max: 200
homing_speed: 80

[stepper_z]
step_pin: P0.22
dir_pin: !P2.11
enable_pin: !P0.21
microsteps: 16
rotation_distance: 2
endstop_pin: probe:z_virtual_endstop
position_max: 310
position_min: -3

[tmc2208 stepper_z]
uart_pin:P1.8
run_current:.660
sense_resistor: 0.110
stealthchop_threshold: 999999

[extruder]
step_pin: P2.13
dir_pin: P0.11
enable_pin: !P2.12
microsteps: 16
rotation_distance: 7.821
nozzle_diameter: 0.400
filament_diameter: 1.750
smooth_time: 2.0
max_extrude_only_velocity: 100
max_extrude_only_accel: 1500
heater_pin: P2.7
sensor_type: ATC Semitec 104GT-2
sensor_pin: P0.24
min_temp: 0
max_temp: 350
pressure_advance: 0.0
pressure_advance_smooth_time: 0.100


[tmc2209 extruder]
uart_pin:P1.4
run_current:.660
stealthchop_threshold: 999999

[heater_bed]
heater_pin: P2.5
sensor_type: EPCOS 100K B57560G104F
sensor_pin: P0.25
smooth_time: 2.0
#control: pid
#pid_Kp: 62.917
#pid_Ki: 0.920
#pid_Kd: 1075.883
min_temp: 0
max_temp: 110

[fan]
pin: P2.3

[printer]
kinematics: cartesian
max_velocity: 400
max_accel: 2500
max_z_velocity: 10
max_z_accel: 100

[safe_z_home]
home_xy_position: 110,110
speed: 80.0
z_hop: 10.0
z_hop_speed: 10.0

[bltouch]
control_pin: P2.0
sensor_pin: ^P0.10
pin_up_touch_mode_reports_triggered: True
x_offset: -31
y_offset: 0
#z_offset = 2.2

[bed_mesh]
speed: 120
horizontal_move_z: 10
mesh_min: 0,10
mesh_max: 160, 200
probe_count: 5,5
fade_start: 1
fade_end: 10
fade_target: 0

[input_shaper]
shaper_freq_x: 39.2
shaper_type_x: mzv
#shaper_freq_y: 34.8
#shaper_type_y: mzv

[firmware_retraction]
retract_length: 2
#   The length of filament (in mm) to retract when G10 is activated,
#   and to unretract when G11 is activated (but see
#   unretract_extra_length below). The default is 0 mm.
retract_speed: 20
#   The speed of retraction, in mm/s. The default is 20 mm/s.
unretract_extra_length: .1
#   The length (in mm) of *additional* filament to add when
#   unretracting.
unretract_speed: 10
#   The speed of unretraction, in mm/s. The default is 10 mm/s.


[respond]
default_type: command
#   Sets the default prefix of the "M118" and "RESPOND" output to one
#   of the following:
#       echo: "echo: " (This is the default)
#       command: "// "
#       error: "!! "
#default_prefix: echo:
#   Directly sets the default prefix. If present, this value will
#   override the "default_type".

[virtual_sdcard]
path: ~/gcode_files

[gcode_arcs]
resolution: 0.5

[display_status]

[pause_resume]

[include timelapse.cfg]

[temperature_sensor raspberry_pi]
sensor_type: temperature_host
min_temp: 10
max_temp: 100

[neopixel main_strip]
pin: P1.24
chain_count: 11
initial_RED: 0.0
initial_GREEN: 0.0
initial_BLUE: 0.0
color_order: GRB

[display]
##	mini12864 LCD Display
lcd_type: uc1701
cs_pin: P1.18
a0_pin: P1.19
encoder_pins: ^P3.25,^P3.26
click_pin: ^!P0.28
contrast: 63
#lcd_type: uc1701
#cs_pin: EXP1_3
#a0_pin: EXP1_4
#rst_pin: EXP1_5
#contrast: 63
#encoder_pins: ^EXP2_5, ^EXP2_3
#click_pin: ^!EXP1_2
## Some micro-controller boards may require an spi bus to be specified:
#spi_bus: spi
## Alternatively, some micro-controller boards may work with software spi:
#spi_software_miso_pin: EXP2_1
#spi_software_mosi_pin: EXP2_6
#spi_software_sclk_pin: EXP2_2

[neopixel fysetc_mini12864]
pin: P1.21
chain_count: 3
color_order: RGB
initial_RED: 0.0
initial_GREEN: 0.0
initial_BLUE: 0.5

[output_pin beeper]
pin: P1.30
###############################################################################################################################################################################################
#                                                                                      GCode Config                                                                                           #
###############################################################################################################################################################################################
[gcode_macro LED_OFF]
gcode:
    SET_LED LED=main_strip RED=0.0 GREEN=0.0 BLUE=0.0 TRANSMIT=1 SYNC=0
    
[gcode_macro WHITE]
gcode:
    SET_LED LED=main_strip RED=1.0 GREEN=1.0 BLUE=1.0 TRANSMIT=1 SYNC=0

[gcode_macro RED]
gcode:
    SET_LED LED=main_strip RED=1.0 GREEN=0.0 BLUE=0.0 TRANSMIT=1 SYNC=0

[gcode_macro GREEN]
gcode:
    SET_LED LED=main_strip RED=0.0 GREEN=1.0 BLUE=0.0 TRANSMIT=1 SYNC=0

[gcode_macro BLUE]
gcode:
    SET_LED LED=main_strip RED=0.0 GREEN=0.0 BLUE=1.0 TRANSMIT=1 SYNC=0

[gcode_macro DARK_ORCHID]
gcode:
    SET_LED LED=main_strip RED=0.6 GREEN=1.0 BLUE=1.0 TRANSMIT=1 SYNC=0

[gcode_macro ROYAL_BLUE]
gcode:
    SET_LED LED=main_strip RED=0.254 GREEN=0.411 BLUE=1.0 TRANSMIT=1 SYNC=0

[gcode_macro DARK_CYAN]
gcode:
    SET_LED LED=main_strip RED=0.0 GREEN=0.54 BLUE=0.54 TRANSMIT=1 SYNC=0

[gcode_macro GOLD]
gcode:
    SET_LED LED=main_strip RED=1.0 GREEN=0.843 BLUE=0.0 TRANSMIT=1 SYNC=0
    
[gcode_macro SIREN]
gcode:
    {% for flashes in range(params.COUNT|default(10)|int) %}
        {% for led in range(1,12) %}
            {% if led < 7 %}
            SET_LED LED=main_strip RED=1.0 GREEN=0.0 BLUE=0.0 INDEX={led} TRANSMIT=1 SYNC=1
            {% else %}
            SET_LED LED=main_strip RED=0.0 GREEN=0.0 BLUE=1.0 INDEX={led} TRANSMIT=1 SYNC=1
            {% endif %}
        {% endfor %}
	G4 P300
        {% for led in range(1,12) %}
            {% if led < 7 %}
            SET_LED LED=main_strip RED=0.0 GREEN=0.0 BLUE=1.0 INDEX={led} TRANSMIT=1 SYNC=1
            {% else %}
            SET_LED LED=main_strip RED=1.0 GREEN=0.0 BLUE=0.0 INDEX={led} TRANSMIT=1 SYNC=1
            {% endif %}
        {% endfor %}
    G4 P300
    {% endfor %}

[gcode_macro SIREN_FLASH]
gcode:
    {% for flashes in range(params.COUNT|default(10)|int) %}
        {% for i in range(2) %}
            {% for led in range(1,7) %}
            SET_LED LED=main_strip RED=1.0 GREEN=0.0 BLUE=0.0 INDEX={led} TRANSMIT=1 SYNC=1
            {% endfor %}
            G4 P75
            SET_LED LED=main_strip RED=0.0 GREEN=0.0 BLUE=0.0 TRANSMIT=1 SYNC=1
            G4 P75
        {% endfor %}
	G4 P150
        {% for i in range(2) %}
            {% for led in range(7,12) %}
            SET_LED LED=main_strip RED=0.0 GREEN=0.0 BLUE=1.0 INDEX={led} TRANSMIT=1 SYNC=1
            {% endfor %}
            G4 P75
            SET_LED LED=main_strip RED=0.0 GREEN=0.0 BLUE=0.0 TRANSMIT=1 SYNC=1
            G4 P75
        {% endfor %}
    G4 P150
    {% endfor %}

[gcode_macro MCU_FAN_ON]
gcode:
    {action_call_remote_method("set_device_power", device="mcu_fan", state="on")}

[gcode_macro MCU_FAN_OFF]
gcode:
    {action_call_remote_method("set_device_power", device="mcu_fan", state="off")}
    
[gcode_macro START_PRINT]
gcode:
    # Use absolute coordinates
    M117 Printing.....
    G90
    MCU_FAN_ON
    # Reset the G-Code Z offset (adjust Z offset if needed)
    #SET_GCODE_OFFSET Z= 0.2
    # Home the printer
    G28
    # Move the nozzle near the bed
    #G1 Z5 F3000
    # Move the nozzle very close to the bed
    #G1 Z0.15 F300
    BED_MESH_CALIBRATE    

[gcode_macro END_PRINT]
variable_machine_depth: 200
gcode:
    # Turn off bed, extruder, and fan
    M140 S0
    M104 S0
    M106 S0
    # Relative positionning
    G91
    # Retract and raise Z
    G1 Z0.2 E-2 F2400
    # Wipe out
    G1 X5 Y5 F3000
    # Raise Z more
    G1 Z10
    # Absolute positionning
    G90
    # Present print
    G1 X0 Y{machine_depth}
    # Disable steppers
    M84
    MCU_FAN_OFF
    # Print message on LCD
    M117 Printer Ready.......

[gcode_macro CANCEL_PRINT]
description: Cancel the actual running print
rename_existing: CANCEL_PRINT_BASE
gcode:
    TURN_OFF_HEATERS
    END_PRINT

[gcode_macro PAUSE]
description: Pause the actual running print
rename_existing: PAUSE_BASE
# change this if you need more or less extrusion
variable_extrude: 1.0
gcode:
    ##### read E from pause macro #####
    {% set E = printer["gcode_macro PAUSE"].extrude|float %}
    ##### set park positon for x and y #####
    # default is your max posion from your printer.cfg
    {% set x_park = printer.toolhead.axis_maximum.x|float - 5.0 %}
    {% set y_park = printer.toolhead.axis_maximum.y|float - 5.0 %}
    ##### calculate save lift position #####
    {% set max_z = printer.toolhead.axis_maximum.z|float %}
    {% set act_z = printer.toolhead.position.z|float %}
    {% if act_z < (max_z - 2.0) %}
        {% set z_safe = 2.0 %}
    {% else %}
        {% set z_safe = max_z - act_z %}
    {% endif %}
    ##### end of definitions #####
    PAUSE_BASE
    G91
    {% if printer.extruder.can_extrude|lower == 'true' %}
      G1 E-{E} F2100
    {% else %}
      {action_respond_info("Extruder not hot enough")}
    {% endif %}
    {% if "xyz" in printer.toolhead.homed_axes %}
      G1 Z{z_safe} F900
      G90
      G1 X{x_park} Y{y_park} F6000
    {% else %}
      {action_respond_info("Printer not homed")}
    {% endif %} 
    
[gcode_macro RESUME]
description: Resume the actual running print
rename_existing: RESUME_BASE
gcode:
    ##### read E from pause macro #####
    {% set E = printer["gcode_macro PAUSE"].extrude|float %}
    #### get VELOCITY parameter if specified ####
    {% if 'VELOCITY' in params|upper %}
      {% set get_params = ('VELOCITY=' + params.VELOCITY)  %}
    {%else %}
      {% set get_params = "" %}
    {% endif %}
    ##### end of definitions #####
    {% if printer.extruder.can_extrude|lower == 'true' %}
      G91
      G1 E{E} F2100
    {% else %}
      {action_respond_info("Extruder not hot enough")}
    {% endif %}  
    RESUME_BASE {get_params}
    
[gcode_macro M300]
gcode:
    # Use a default 1kHz tone if S is omitted.
    {% set S = params.S|default(1000)|int %}
    # Use a 10ms duration is P is omitted.
    {% set P = params.P|default(100)|int %}
    SET_PIN PIN=BEEPER_pin VALUE=0.5 CYCLE_TIME={ 1.0/S if S > 0 else 1 }
    G4 P{P}
    SET_PIN PIN=BEEPER_pin VALUE=0

[gcode_macro M600]
gcode:
    {% set X = params.X|default(50)|float %}
    {% set Y = params.Y|default(0)|float %}
    {% set Z = params.Z|default(10)|float %}
    SAVE_GCODE_STATE NAME=M600_state
    PAUSE
    G91
    G1 E-.8 F2700
    G1 Z{Z}
    G90
    G1 X{X} Y{Y} F3000
    G91
    G1 E-20 F3000
    G1 E-310 F7000
    RESTORE_GCODE_STATE NAME=M600_state

[gcode_macro UNLOAD]
gcode:
  G91
  G1 E5.0 F1200
  G1 E3.0 F1600
  G1 E-13.14 F7000
  G1 E-310 F3000 #This is a partial unload for the E5, but you need to adjust the default setting for max extrusion from 50
  G90

[gcode_macro PURGE]
gcode:
  M117 PURGING..
  G91
  G1 E30.0 F100
  G90

[gcode_macro LOAD_FILAMENT]
gcode:
  M117  LOADING...
  G91
  G1 E25.0 F1000
  G1 E100 F2500
  G4 P900
  G1 E45.0 F250
  G90

[gcode_macro RESUME_MACRO]
gcode:
  PURGE
  SET_GCODE_OFFSET Z_ADJUST=-0.1 MOVE=1
  M117  RESUMING...
  RESUME

[gcode_macro PARK_MACRO] 
gcode:
    {% set X = params.X|default(0)|float %}
    {% set Y = params.Y|default(225)|float %}
    {% set Z = params.Z|default(10)|float %}
    M117 PARKING..
    SAVE_GCODE_STATE NAME=PARK_MACRO_state
    G91
    G1 E-3.14 F1500
    G1 Z{Z}
    G90
    G1 X{X} Y{Y} F3000
    RESTORE_GCODE_STATE NAME=PARK_MACRO_state

[gcode_macro M601]
gcode:
  PAUSE
  PARK_MACRO

###############################################################################################################################################################################################
#                                                                                      Menu Config                                                                                            #
###############################################################################################################################################################################################
[menu __main __macro]
type: list
index:3
name: GCode Macros

[menu __main __macro __park]
type: command
enable: {printer.idle_timeout.state == "Printing"}
name: Park
gcode: PARK_MACRO

[menu __main __macro __purge]
type: command
name: Purge
gcode: PURGE

[menu __main __macro __resume]
type: command
enable: {not printer.idle_timeout.state == "Printing"}
name: Resume
gcode: RESUME_MACRO

[board_pins]
aliases:
    # EXP1 header
    EXP1_1=P1.30, EXP1_3=P1.18, EXP1_5=P1.20, EXP1_7=P1.22, EXP1_9=<GND>,
    EXP1_2=P0.28, EXP1_4=P1.19, EXP1_6=P1.21, EXP1_8=P1.23, EXP1_10=<5V>,
    # EXP2 header
    EXP2_1=P0.17, EXP2_3=P3.26, EXP2_5=P3.25, EXP2_7=P1.31, EXP2_9=<GND>,
    EXP2_2=P0.15, EXP2_4=P0.16, EXP2_6=P0.18, EXP2_8=<RST>, EXP2_10=<NC>
    #Pins EXP2_1, EXP2_6, EXP2_2 are also MISO, MOSI, SCK of bus "ssp0"

#*# <---------------------- SAVE_CONFIG ---------------------->
#*# DO NOT EDIT THIS BLOCK OR BELOW. The contents are auto-generated.
#*#
#*# [heater_bed]
#*# control = pid
#*# pid_kp = 63.782
#*# pid_ki = 0.891
#*# pid_kd = 1140.897
#*#
#*# [bed_mesh default]
#*# version = 1
#*# points =
#*# 	  -0.649375, -0.730000, -0.708750, -0.723750, -0.675000
#*# 	  -0.729375, -0.831250, -0.850000, -0.842500, -0.858125
#*# 	  -0.804375, -0.917500, -0.958750, -0.947500, -0.923125
#*# 	  -0.831250, -1.038125, -1.055625, -1.026250, -0.983750
#*# 	  -0.707500, -0.930000, -0.965000, -0.950000, -0.910625
#*# tension = 0.2
#*# min_x = 0.0
#*# algo = lagrange
#*# y_count = 5
#*# mesh_y_pps = 2
#*# min_y = 10.0
#*# x_count = 5
#*# max_y = 200.0
#*# mesh_x_pps = 2
#*# max_x = 160.0
#*#
#*# [input_shaper]
#*# shaper_type_y = mzv
#*# shaper_freq_y = 34.6
#*#
#*# [extruder]
#*# control = pid
#*# pid_kp = 28.432
#*# pid_ki = 2.399
#*# pid_kd = 84.228
#*#
#*# [bltouch]
#*# z_offset = 4.350
